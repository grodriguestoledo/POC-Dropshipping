// <auto-generated />
using Cliente.API.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Cliente.API.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ClienteDbContext))]
    partial class ClienteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cliente.API.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CLIENTE_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ContaUID")
                        .HasColumnName("CONTA_UID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnName("SOBRENOME");

                    b.HasKey("ClienteId");

                    b.HasIndex("ContaUID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Cliente.API.Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ENDERECO_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnName("BAIRRO");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnName("CEP");

                    b.Property<int>("CLIENTE_ID");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnName("CIDADE");

                    b.Property<string>("Complemento")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO");

                    b.Property<bool>("EhEnderecoPrincipal")
                        .HasColumnName("ENDERECO_PRINCIPAL");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnName("LOGRADOURO");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnName("NUMERO");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnName("UF");

                    b.Property<Guid>("UID")
                        .HasColumnName("UID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EnderecoId");

                    b.HasIndex("CLIENTE_ID");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Cliente.API.Domain.Entities.Endereco", b =>
                {
                    b.HasOne("Cliente.API.Domain.Entities.Cliente")
                        .WithMany("Enderecos")
                        .HasForeignKey("CLIENTE_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
